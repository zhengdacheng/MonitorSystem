// Code generated by protoc-gen-go. DO NOT EDIT.
// source: report.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 定义发送请求信息
type ReportReq struct {
	HostID               string   `protobuf:"bytes,1,opt,name=hostID,proto3" json:"hostID,omitempty"`
	CpuRate              float32  `protobuf:"fixed32,2,opt,name=cpuRate,proto3" json:"cpuRate,omitempty"`
	MemRate              float32  `protobuf:"fixed32,3,opt,name=memRate,proto3" json:"memRate,omitempty"`
	TimeStamp            int64    `protobuf:"varint,4,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportReq) Reset()         { *m = ReportReq{} }
func (m *ReportReq) String() string { return proto.CompactTextString(m) }
func (*ReportReq) ProtoMessage()    {}
func (*ReportReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eedb623aa6ca98c, []int{0}
}

func (m *ReportReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportReq.Unmarshal(m, b)
}
func (m *ReportReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportReq.Marshal(b, m, deterministic)
}
func (m *ReportReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportReq.Merge(m, src)
}
func (m *ReportReq) XXX_Size() int {
	return xxx_messageInfo_ReportReq.Size(m)
}
func (m *ReportReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReportReq proto.InternalMessageInfo

func (m *ReportReq) GetHostID() string {
	if m != nil {
		return m.HostID
	}
	return ""
}

func (m *ReportReq) GetCpuRate() float32 {
	if m != nil {
		return m.CpuRate
	}
	return 0
}

func (m *ReportReq) GetMemRate() float32 {
	if m != nil {
		return m.MemRate
	}
	return 0
}

func (m *ReportReq) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

// 定义响应信息
type ReportResp struct {
	// 返回码，返回信息
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportResp) Reset()         { *m = ReportResp{} }
func (m *ReportResp) String() string { return proto.CompactTextString(m) }
func (*ReportResp) ProtoMessage()    {}
func (*ReportResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eedb623aa6ca98c, []int{1}
}

func (m *ReportResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportResp.Unmarshal(m, b)
}
func (m *ReportResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportResp.Marshal(b, m, deterministic)
}
func (m *ReportResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportResp.Merge(m, src)
}
func (m *ReportResp) XXX_Size() int {
	return xxx_messageInfo_ReportResp.Size(m)
}
func (m *ReportResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReportResp proto.InternalMessageInfo

func (m *ReportResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReportResp) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*ReportReq)(nil), "proto.reportReq")
	proto.RegisterType((*ReportResp)(nil), "proto.reportResp")
}

func init() { proto.RegisterFile("report.proto", fileDescriptor_3eedb623aa6ca98c) }

var fileDescriptor_3eedb623aa6ca98c = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4a, 0x2d, 0xc8,
	0x2f, 0x2a, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xa5, 0x5c, 0x9c,
	0x10, 0xe1, 0xa0, 0xd4, 0x42, 0x21, 0x31, 0x2e, 0xb6, 0x8c, 0xfc, 0xe2, 0x12, 0x4f, 0x17, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x28, 0x4f, 0x48, 0x82, 0x8b, 0x3d, 0xb9, 0xa0, 0x34, 0x28,
	0xb1, 0x24, 0x55, 0x82, 0x49, 0x81, 0x51, 0x83, 0x29, 0x08, 0xc6, 0x05, 0xc9, 0xe4, 0xa6, 0xe6,
	0x82, 0x65, 0x98, 0x21, 0x32, 0x50, 0xae, 0x90, 0x0c, 0x17, 0x67, 0x49, 0x66, 0x6e, 0x6a, 0x70,
	0x49, 0x62, 0x6e, 0x81, 0x04, 0x8b, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x42, 0x40, 0xc9, 0x8c, 0x8b,
	0x0b, 0x66, 0x6d, 0x71, 0x81, 0x90, 0x10, 0x17, 0x4b, 0x72, 0x7e, 0x4a, 0x2a, 0xd8, 0x56, 0xd6,
	0x20, 0x30, 0x5b, 0x48, 0x84, 0x8b, 0xb5, 0x2c, 0x31, 0xa7, 0x14, 0x62, 0x23, 0x67, 0x10, 0x84,
	0x63, 0x64, 0xc9, 0xc5, 0x16, 0x04, 0xd6, 0x27, 0xa4, 0x0f, 0x67, 0x09, 0x40, 0x7c, 0xa4, 0x07,
	0xf7, 0x87, 0x94, 0x20, 0x9a, 0x48, 0x71, 0x81, 0x12, 0x83, 0x13, 0x57, 0x14, 0x87, 0x9e, 0x9e,
	0x3e, 0x58, 0x22, 0x89, 0x0d, 0x4c, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x23, 0x46, 0x6c,
	0x02, 0x13, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReportClient is the client API for Report service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReportClient interface {
	Report(ctx context.Context, in *ReportReq, opts ...grpc.CallOption) (*ReportResp, error)
}

type reportClient struct {
	cc *grpc.ClientConn
}

func NewReportClient(cc *grpc.ClientConn) ReportClient {
	return &reportClient{cc}
}

func (c *reportClient) Report(ctx context.Context, in *ReportReq, opts ...grpc.CallOption) (*ReportResp, error) {
	out := new(ReportResp)
	err := c.cc.Invoke(ctx, "/proto.Report/Report", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReportServer is the server API for Report service.
type ReportServer interface {
	Report(context.Context, *ReportReq) (*ReportResp, error)
}

// UnimplementedReportServer can be embedded to have forward compatible implementations.
type UnimplementedReportServer struct {
}

func (*UnimplementedReportServer) Report(ctx context.Context, req *ReportReq) (*ReportResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Report not implemented")
}

func RegisterReportServer(s *grpc.Server, srv ReportServer) {
	s.RegisterService(&_Report_serviceDesc, srv)
}

func _Report_Report_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportServer).Report(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Report/Report",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportServer).Report(ctx, req.(*ReportReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Report_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Report",
	HandlerType: (*ReportServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Report",
			Handler:    _Report_Report_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "report.proto",
}

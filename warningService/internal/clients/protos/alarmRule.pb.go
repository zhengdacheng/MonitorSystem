// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: alarmRule.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 定义发送请求信息
type AlarmRuleQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AlarmRuleQueryReq) Reset() {
	*x = AlarmRuleQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alarmRule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRuleQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRuleQueryReq) ProtoMessage() {}

func (x *AlarmRuleQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_alarmRule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRuleQueryReq.ProtoReflect.Descriptor instead.
func (*AlarmRuleQueryReq) Descriptor() ([]byte, []int) {
	return file_alarmRule_proto_rawDescGZIP(), []int{0}
}

// 定义响应信息，由于没有用户概念，因此定义的规则将适用于所有受监控的host(number >= 1)
type AlarmRuleQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// cpu relative threshold
	CpuNoteworthyThreshold float32 `protobuf:"fixed32,2,opt,name=CpuNoteworthyThreshold,proto3" json:"CpuNoteworthyThreshold,omitempty"`
	CpuSeriousThreshold    float32 `protobuf:"fixed32,3,opt,name=CpuSeriousThreshold,proto3" json:"CpuSeriousThreshold,omitempty"`
	CpuDeadlyThreshold     float32 `protobuf:"fixed32,4,opt,name=CpuDeadlyThreshold,proto3" json:"CpuDeadlyThreshold,omitempty"`
	// mem relative threshold
	MemNoteworthyThreshold float32 `protobuf:"fixed32,5,opt,name=MemNoteworthyThreshold,proto3" json:"MemNoteworthyThreshold,omitempty"`
	MemSeriousThreshold    float32 `protobuf:"fixed32,6,opt,name=MemSeriousThreshold,proto3" json:"MemSeriousThreshold,omitempty"`
	MemDeadlyThreshold     float32 `protobuf:"fixed32,7,opt,name=MemDeadlyThreshold,proto3" json:"MemDeadlyThreshold,omitempty"`
	Granularity            string  `protobuf:"bytes,8,opt,name=Granularity,proto3" json:"Granularity,omitempty"`
	AggregateFunction      string  `protobuf:"bytes,9,opt,name=AggregateFunction,proto3" json:"AggregateFunction,omitempty"`
	ContactEmail           string  `protobuf:"bytes,10,opt,name=ContactEmail,proto3" json:"ContactEmail,omitempty"`
}

func (x *AlarmRuleQueryResp) Reset() {
	*x = AlarmRuleQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_alarmRule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRuleQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRuleQueryResp) ProtoMessage() {}

func (x *AlarmRuleQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_alarmRule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRuleQueryResp.ProtoReflect.Descriptor instead.
func (*AlarmRuleQueryResp) Descriptor() ([]byte, []int) {
	return file_alarmRule_proto_rawDescGZIP(), []int{1}
}

func (x *AlarmRuleQueryResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AlarmRuleQueryResp) GetCpuNoteworthyThreshold() float32 {
	if x != nil {
		return x.CpuNoteworthyThreshold
	}
	return 0
}

func (x *AlarmRuleQueryResp) GetCpuSeriousThreshold() float32 {
	if x != nil {
		return x.CpuSeriousThreshold
	}
	return 0
}

func (x *AlarmRuleQueryResp) GetCpuDeadlyThreshold() float32 {
	if x != nil {
		return x.CpuDeadlyThreshold
	}
	return 0
}

func (x *AlarmRuleQueryResp) GetMemNoteworthyThreshold() float32 {
	if x != nil {
		return x.MemNoteworthyThreshold
	}
	return 0
}

func (x *AlarmRuleQueryResp) GetMemSeriousThreshold() float32 {
	if x != nil {
		return x.MemSeriousThreshold
	}
	return 0
}

func (x *AlarmRuleQueryResp) GetMemDeadlyThreshold() float32 {
	if x != nil {
		return x.MemDeadlyThreshold
	}
	return 0
}

func (x *AlarmRuleQueryResp) GetGranularity() string {
	if x != nil {
		return x.Granularity
	}
	return ""
}

func (x *AlarmRuleQueryResp) GetAggregateFunction() string {
	if x != nil {
		return x.AggregateFunction
	}
	return ""
}

func (x *AlarmRuleQueryResp) GetContactEmail() string {
	if x != nil {
		return x.ContactEmail
	}
	return ""
}

var File_alarmRule_proto protoreflect.FileDescriptor

var file_alarmRule_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a, 0x11, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x52, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x22, 0xd0, 0x03,
	0x0a, 0x12, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x43, 0x70, 0x75, 0x4e,
	0x6f, 0x74, 0x65, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x16, 0x43, 0x70, 0x75, 0x4e, 0x6f, 0x74,
	0x65, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x12, 0x30, 0x0a, 0x13, 0x43, 0x70, 0x75, 0x53, 0x65, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x43,
	0x70, 0x75, 0x53, 0x65, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x43, 0x70, 0x75, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x79, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12,
	0x43, 0x70, 0x75, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x4d, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x65, 0x77, 0x6f, 0x72,
	0x74, 0x68, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x16, 0x4d, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x65, 0x77, 0x6f, 0x72, 0x74, 0x68,
	0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x65,
	0x6d, 0x53, 0x65, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x4d, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x69,
	0x6f, 0x75, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x2e, 0x0a, 0x12,
	0x4d, 0x65, 0x6d, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x4d, 0x65, 0x6d, 0x44, 0x65, 0x61,
	0x64, 0x6c, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2c,
	0x0a, 0x11, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x32, 0x5b, 0x0a, 0x10, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x75, 0x6c,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x75,
	0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0a, 0x5a,
	0x08, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_alarmRule_proto_rawDescOnce sync.Once
	file_alarmRule_proto_rawDescData = file_alarmRule_proto_rawDesc
)

func file_alarmRule_proto_rawDescGZIP() []byte {
	file_alarmRule_proto_rawDescOnce.Do(func() {
		file_alarmRule_proto_rawDescData = protoimpl.X.CompressGZIP(file_alarmRule_proto_rawDescData)
	})
	return file_alarmRule_proto_rawDescData
}

var file_alarmRule_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_alarmRule_proto_goTypes = []interface{}{
	(*AlarmRuleQueryReq)(nil),  // 0: proto.alarmRuleQueryReq
	(*AlarmRuleQueryResp)(nil), // 1: proto.alarmRuleQueryResp
}
var file_alarmRule_proto_depIdxs = []int32{
	0, // 0: proto.alarmRuleService.AlarmRuleQuery:input_type -> proto.alarmRuleQueryReq
	1, // 1: proto.alarmRuleService.AlarmRuleQuery:output_type -> proto.alarmRuleQueryResp
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_alarmRule_proto_init() }
func file_alarmRule_proto_init() {
	if File_alarmRule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_alarmRule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRuleQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_alarmRule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRuleQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_alarmRule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_alarmRule_proto_goTypes,
		DependencyIndexes: file_alarmRule_proto_depIdxs,
		MessageInfos:      file_alarmRule_proto_msgTypes,
	}.Build()
	File_alarmRule_proto = out.File
	file_alarmRule_proto_rawDesc = nil
	file_alarmRule_proto_goTypes = nil
	file_alarmRule_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AlarmRuleServiceClient is the client API for AlarmRuleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AlarmRuleServiceClient interface {
	AlarmRuleQuery(ctx context.Context, in *AlarmRuleQueryReq, opts ...grpc.CallOption) (*AlarmRuleQueryResp, error)
}

type alarmRuleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAlarmRuleServiceClient(cc grpc.ClientConnInterface) AlarmRuleServiceClient {
	return &alarmRuleServiceClient{cc}
}

func (c *alarmRuleServiceClient) AlarmRuleQuery(ctx context.Context, in *AlarmRuleQueryReq, opts ...grpc.CallOption) (*AlarmRuleQueryResp, error) {
	out := new(AlarmRuleQueryResp)
	err := c.cc.Invoke(ctx, "/proto.alarmRuleService/AlarmRuleQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AlarmRuleServiceServer is the server API for AlarmRuleService service.
type AlarmRuleServiceServer interface {
	AlarmRuleQuery(context.Context, *AlarmRuleQueryReq) (*AlarmRuleQueryResp, error)
}

// UnimplementedAlarmRuleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAlarmRuleServiceServer struct {
}

func (*UnimplementedAlarmRuleServiceServer) AlarmRuleQuery(context.Context, *AlarmRuleQueryReq) (*AlarmRuleQueryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AlarmRuleQuery not implemented")
}

func RegisterAlarmRuleServiceServer(s *grpc.Server, srv AlarmRuleServiceServer) {
	s.RegisterService(&_AlarmRuleService_serviceDesc, srv)
}

func _AlarmRuleService_AlarmRuleQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlarmRuleQueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlarmRuleServiceServer).AlarmRuleQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.alarmRuleService/AlarmRuleQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlarmRuleServiceServer).AlarmRuleQuery(ctx, req.(*AlarmRuleQueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AlarmRuleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.alarmRuleService",
	HandlerType: (*AlarmRuleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AlarmRuleQuery",
			Handler:    _AlarmRuleService_AlarmRuleQuery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "alarmRule.proto",
}
